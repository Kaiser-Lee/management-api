<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.genealogy.dao.UserMapper" >

  <resultMap id="BaseResultMap" type="com.genealogy.po.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="nick" property="nick" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="VARCHAR" />
    <result column="marital_status" property="maritalStatus" jdbcType="INTEGER" />
    <result column="seniority" property="seniority" jdbcType="VARCHAR" />
    <result column="hobby" property="hobby" jdbcType="VARCHAR" />
    <result column="spouse" property="spouse" jdbcType="VARCHAR" />
    <result column="qualifications" property="qualifications" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="ResultMapWithBLOBs" type="com.genealogy.po.User" extends="BaseResultMap" >
    <result column="lifetime" property="lifetime" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, number, password, openid, nick, phone, create_time, update_time, real_name, sex, 
    avatar, age, marital_status, seniority, hobby, spouse, qualifications, email
  </sql>
  <sql id="Blob_Column_List" >
    lifetime
  </sql>

  <select id="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_user
    <where>
      <if test="number != null and number != ''">`number` = #{number}</if>
      <if test="openid != null and openid != ''">`openid` = #{openid}</if>
      <if test="nick != null and nick != ''">`nick` = #{nick}</if>
      <if test="phone != null and phone != ''">`phone` = #{phone}</if>
      <if test="create_time != null and create_time != ''">`create_time` = #{create_time}</if>
      <if test="update_time != null and update_time != ''">`update_time` = #{update_time}</if>
      <if test="real_name != null and real_name != ''">`real_name` = #{real_name}</if>
      <if test="sex != null and sex != ''">`sex` = #{sex}</if>
      <if test="marital_status != null and marital_status != ''">`marital_status` = #{marital_status}</if>
      <if test="hobby != null and hobby != ''">`hobby` = #{hobby}</if>
      <if test="spouse != null and spouse != ''">`spouse` = #{spouse}</if>
      <if test="qualifications != null and qualifications != ''">`qualifications` = #{qualifications}</if>
    </where>
    <choose>
      <when test="sort != null and sort.trim() != ''">
        order by ${sort} ${order}
      </when>
      <otherwise>
        order by id desc
      </otherwise>
    </choose>
    <if test="offset != null and limit != null">
      limit #{offset} ,#{limit}
    </if>
  </select>



  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.genealogy.po.User" useGeneratedKeys="true" keyProperty="id" >
    insert into t_user (number, password, openid, 
      nick, phone, create_time, 
      update_time, real_name, sex, 
      avatar, age, marital_status, 
      seniority, hobby, spouse, 
      qualifications, email, lifetime
      )
    values (#{number,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, 
      #{nick,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{avatar,jdbcType=VARCHAR}, #{age,jdbcType=VARCHAR}, #{maritalStatus,jdbcType=INTEGER}, 
      #{seniority,jdbcType=VARCHAR}, #{hobby,jdbcType=VARCHAR}, #{spouse,jdbcType=VARCHAR}, 
      #{qualifications,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{lifetime,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.genealogy.po.User" useGeneratedKeys="true" keyProperty="id" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="number != null" >
        number,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="nick != null" >
        nick,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="maritalStatus != null" >
        marital_status,
      </if>
      <if test="seniority != null" >
        seniority,
      </if>
      <if test="hobby != null" >
        hobby,
      </if>
      <if test="spouse != null" >
        spouse,
      </if>
      <if test="qualifications != null" >
        qualifications,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="lifetime != null" >
        lifetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="nick != null" >
        #{nick,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null" >
        #{maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="seniority != null" >
        #{seniority,jdbcType=VARCHAR},
      </if>
      <if test="hobby != null" >
        #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="spouse != null" >
        #{spouse,jdbcType=VARCHAR},
      </if>
      <if test="qualifications != null" >
        #{qualifications,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="lifetime != null" >
        #{lifetime,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.genealogy.po.User" >
    update t_user
    <set >
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="nick != null" >
        nick = #{nick,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null" >
        marital_status = #{maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="seniority != null" >
        seniority = #{seniority,jdbcType=VARCHAR},
      </if>
      <if test="hobby != null" >
        hobby = #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="spouse != null" >
        spouse = #{spouse,jdbcType=VARCHAR},
      </if>
      <if test="qualifications != null" >
        qualifications = #{qualifications,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="lifetime != null" >
        lifetime = #{lifetime,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.genealogy.po.User" >
    update t_user
    set number = #{number,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      nick = #{nick,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      avatar = #{avatar,jdbcType=VARCHAR},
      age = #{age,jdbcType=VARCHAR},
      marital_status = #{maritalStatus,jdbcType=INTEGER},
      seniority = #{seniority,jdbcType=VARCHAR},
      hobby = #{hobby,jdbcType=VARCHAR},
      spouse = #{spouse,jdbcType=VARCHAR},
      qualifications = #{qualifications,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      lifetime = #{lifetime,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.genealogy.po.User" >
    update t_user
    set number = #{number,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      nick = #{nick,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      avatar = #{avatar,jdbcType=VARCHAR},
      age = #{age,jdbcType=VARCHAR},
      marital_status = #{maritalStatus,jdbcType=INTEGER},
      seniority = #{seniority,jdbcType=VARCHAR},
      hobby = #{hobby,jdbcType=VARCHAR},
      spouse = #{spouse,jdbcType=VARCHAR},
      qualifications = #{qualifications,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>