package com.iwhalecloud.retail.oms.web.controller.rop;

import lombok.extern.slf4j.Slf4j;

import org.apache.commons.lang.StringUtils;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import params.cart.req.CartAddReq;
import params.cart.req.CartListReq;
import params.cart.req.CartReverseSelectionReq;
import params.cart.resp.CartAddResp;
import zte.params.cart.req.CartDeleteReq;
import zte.params.order.req.CartUpdateReq;

import com.alibaba.dubbo.config.annotation.Reference;
import com.iwhalecloud.retail.oms.VO.CartVO;
import com.iwhalecloud.retail.oms.service.CartService;
import com.iwhalecloud.retail.oms.web.annotation.UserLoginToken;
import com.iwhalecloud.retail.oms.web.controller.BaseController;
import com.iwhalecloud.retail.oms.dto.ResultVO;
import com.iwhalecloud.retail.oms.web.interceptor.MemberContext;

/**
 * @author pjq
 * @date 2018/10/8
 */
@RestController
@RequestMapping("/api/rop/cart")
@Slf4j
public class CartROPController  extends BaseController {

	@Reference
    private CartService cartService;

    /**
     * 查询购物车
     * @return
     */
    @GetMapping(value="getCartList")
    @UserLoginToken
    public ResultVO<CartVO> getCartList(){
        CartListReq req = new CartListReq();
        //获取memberId
        String memberId = MemberContext.getMemberId();
        String sessionId = MemberContext.getUserSessionId();
        if(StringUtils.isEmpty(memberId)){
            return failResultVO();
        }
        if(StringUtils.isNotEmpty(memberId)){
            req.setMember_id(memberId);
        }
        req.setUserSessionId(sessionId);
        ResultVO<CartVO> respResultVO = cartService.listCart(req);
        return respResultVO;
    }

    /**
     * 添加购物车
     * @param req
     * @return
     */
    @RequestMapping(value="/addCart",method = RequestMethod.POST)
    @UserLoginToken
    public ResultVO<CartAddResp> addCart(@RequestBody CartAddReq req){
        log.info("CartController addCart req={} ",req);
        if(null == req){
            return failResultVO();
        }
        String sessionId = MemberContext.getUserSessionId();
        String memeberId = MemberContext.getMemberId();
        //req.setMember_id(memeberId);
        req.setUserSessionId(sessionId);
        ResultVO<CartAddResp> cartAddRespResultVO = cartService.addCart(req);
        return cartAddRespResultVO;
    }

    /**
     * 修改购物车数量
     * @param req
     * @return
     */
    @RequestMapping(value="/updateCartNum",method = RequestMethod.POST)
    @UserLoginToken
    public ResultVO<Boolean> updateCartNum(@RequestBody CartUpdateReq req){
        log.info("CartController updateCartNum req={} ",req);
        if(null == req){
            return failResultVO();
        }
        String sessionId = MemberContext.getUserSessionId();
        req.setUserSessionId(sessionId);
        ResultVO<Boolean> resultVO = cartService.updateCartNum(req);
        return resultVO;
    }

    /**
     * 删除购物车
     * req
     * @return
     */
    @RequestMapping(value="/deleteCart",method = RequestMethod.POST)
    @UserLoginToken
    public ResultVO<Boolean> deleteCart(@RequestBody CartDeleteReq req){
        log.info("CartController updateCartNum req={} ",req);
        String sessionId = MemberContext.getUserSessionId();
        req.setUserSessionId(sessionId);
        ResultVO<Boolean> resultVO = cartService.deleteCart(req);
        return resultVO;
    }

    @GetMapping(value="/cartReverseSelection")
    @UserLoginToken
    public ResultVO<Boolean> cartReverseSelection(){
        CartReverseSelectionReq req = new CartReverseSelectionReq();
        String sessionId = MemberContext.getUserSessionId();
        String memberId = MemberContext.getMemberId();
        req.setUserSessionId(sessionId);
        req.setMember_id(memberId);
        ResultVO<Boolean> resultVO = cartService.cartReverseSelection(req);
        return resultVO;
    }
}
