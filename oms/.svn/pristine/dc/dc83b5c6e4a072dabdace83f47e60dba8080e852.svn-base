package com.iwhalecloud.retail.oms.service.impl;

import com.alibaba.fastjson.JSON;
import com.iwhalecloud.retail.oms.OmsServiceApplication;
import com.iwhalecloud.retail.oms.consts.OrderManagerConsts;
import com.iwhalecloud.retail.oms.dto.resquest.FileManagerDTO;
import com.iwhalecloud.retail.oms.dto.resquest.order.BuilderOrderRequestDTO;
import com.iwhalecloud.retail.oms.dto.resquest.order.SelectOrderRequestDTO;
import com.iwhalecloud.retail.oms.dto.resquest.order.UpdateOrderStatusRequestDTO;
import com.iwhalecloud.retail.oms.manager.TestUserManger;
import com.iwhalecloud.retail.oms.service.FileManagerService;
import com.iwhalecloud.retail.oms.service.OrderManagerService;
import com.iwhalecloud.retail.oms.service.TestService;
import org.apache.commons.codec.binary.Base64;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;
import zte.params.order.resp.OrderQueryResp;

import java.io.*;


@RunWith(SpringRunner.class)
@SpringBootTest(classes = OmsServiceApplication.class)
public class TestServiceImplTest {

    @Autowired
    TestService testService;

    @Autowired
    OrderManagerService orderManagerService;

    @Test
    public void testMabatis() throws Exception {
        testService.testMabatis();
    }

    @Test
    public void testH2Mapper() throws Exception {
        testService.testH2Mapper();
    }

    @Autowired
    TestUserManger testUserManger;

    @Test
    public void selectPageVo() {
        testUserManger.testSelect();
    }


    @Test
    public void builderOrder() {
        for (int i = 0; i < 1; i++) {
            BuilderOrderRequestDTO builderOrderRequestDTO = new BuilderOrderRequestDTO();

            builderOrderRequestDTO.setUserSessionId("5e5503e17a484ecca603308b98e44c06");
//            builderOrderRequestDTO.setProductId("150625886600150382");
            builderOrderRequestDTO.setProductId("151013494100236735");
            builderOrderRequestDTO.setMemberId("151012609600174677");
//            builderOrderRequestDTO.setAccNbr("18946738273");
            builderOrderRequestDTO.setRemark("gs_20181008测试2018" + System.currentTimeMillis() + ":" + i);
            builderOrderRequestDTO.setGoodsNum(2);
            builderOrderRequestDTO.setTypeCode(2); //1:APP；2：微商城-普通单；3：微商城-商机单；4：其它
            builderOrderRequestDTO.setPayType("1"); //1:在线支付  2货到付款
            builderOrderRequestDTO.setOrderType("1");
            builderOrderRequestDTO.setSourceType(OrderManagerConsts.ORDER_SOURCE_TYPE_LJGM);

            builderOrderRequestDTO.setInvoiceTitle(1); //发票抬头：1 个人 2单位
            builderOrderRequestDTO.setInvoiceType(1); //  //发票类型：1普通发票、2增值发票
            builderOrderRequestDTO.setInvoiceDetail("invoiceDetail");
            builderOrderRequestDTO.setInvoiceTitleDesc("invoiceTitleDesc");


//            builderOrderRequestDTO.setCustName("zhangs");
//            builderOrderRequestDTO.setIcNo("360");
//            builderOrderRequestDTO.setIcAddr("jiangxisheng");
//            builderOrderRequestDTO.setContactName("zhangContactName");
//            builderOrderRequestDTO.setContactPhone("test_110");

            builderOrderRequestDTO.setAddressId("150805561900258956");

            builderOrderRequestDTO.setShipAddr("江西省");
            builderOrderRequestDTO.setShipMobile("13250299515");
            builderOrderRequestDTO.setShipName("gs");
            builderOrderRequestDTO.setShippingAmount("10");
            builderOrderRequestDTO.setShipType("0");


            System.out.println(JSON.toJSONString(builderOrderRequestDTO));

            orderManagerService.builderOrder(builderOrderRequestDTO);
        }

    }

    @Test
    public void selectOrder() {
        SelectOrderRequestDTO orderRequestDTO = new SelectOrderRequestDTO();
        orderRequestDTO.setMemberId("150624457600159360");
        orderRequestDTO.setOrderStatus("1");
        orderRequestDTO.setPageNo(1);
        orderRequestDTO.setPageSize(6);
        OrderQueryResp resp = orderManagerService.selectOrder(orderRequestDTO);
        System.out.println(JSON.toJSONString(resp));
    }

    @Test
    public void updateOrderStatus() {
        UpdateOrderStatusRequestDTO updateOrderStatusRequestDTO = new UpdateOrderStatusRequestDTO();
        updateOrderStatusRequestDTO.setOrderId("2018103114204480200626217 ");//2018102317450259600938695
        updateOrderStatusRequestDTO.setFlowType("H");
        updateOrderStatusRequestDTO.setLogiNo("10010");
        updateOrderStatusRequestDTO.setShipNum("1");
        updateOrderStatusRequestDTO.setNeedShipping("0");
        updateOrderStatusRequestDTO.setLogiName("联通");
        updateOrderStatusRequestDTO.setMemberId("181031588100419686");
        orderManagerService.updateOrderStatus(updateOrderStatusRequestDTO);
    }

    @Test
    public void testRop() {
        testService.testRop();
    }


    @Autowired
    FileManagerService fileManagerService;

    @Test
    public void uploadImage() {
        try {
            File file = new File("C:/Users/gongsheng9/Pictures/1.jpg");
            InputStream in = new FileInputStream(file);
            FileManagerDTO fileManagerDTO = new FileManagerDTO();
            fileManagerDTO.setImage(Base64.encodeBase64String(readInputStreamToString(in)));
            fileManagerDTO.setFileSize(file.length());
            fileManagerDTO.setFileName("1.jpg");
            fileManagerService.uploadImage(fileManagerDTO);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    public static byte[] readInputStreamToString(InputStream is){
        try {
            ByteArrayOutputStream baos=new ByteArrayOutputStream();
            int length=0;
            byte[] buffer=new byte[1024];
            while((length=is.read(buffer))!=-1){
                baos.write(buffer, 0, length);
            }
            is.close();
            baos.close();
            //或者用这种方法
            //byte[] result=baos.toByteArray();
            //return new String(result);
            return baos.toByteArray();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

}