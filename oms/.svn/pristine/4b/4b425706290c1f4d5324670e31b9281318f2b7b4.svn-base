package com.iwhalecloud.retail.oms.handler;

import com.iwhalecloud.retail.oms.consts.OrderManagerConsts;
import com.iwhalecloud.retail.oms.dto.resquest.order.SelectOrderRequestDTO;
import com.iwhalecloud.retail.oms.rop.ZteRopClient;
import com.ztesoft.net.mall.core.model.OrderQueryParam;
import com.ztesoft.net.model.OrderGoodsItemModel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.util.StringUtils;
import zte.params.order.req.OrderDeliveryListReq;
import zte.params.order.req.OrderGoodsItemModelsReq;
import zte.params.order.req.OrderQueryReq;
import zte.params.order.resp.OrderDeliveryListResp;
import zte.params.order.resp.OrderGoodsItemModelsResp;

import java.util.ArrayList;
import java.util.List;

@Component
public class OrderSelectHandler {

    @Autowired
    private ZteRopClient zteRopClient;

    //通过订单id查询商品列表
    public List selectGoodsByOrderId(String OrderId) {
        List item_list = new ArrayList();
        //根据订单ID查询商品
        OrderGoodsItemModelsReq itemReq = new OrderGoodsItemModelsReq();
        itemReq.setOrder_id(OrderId);
        OrderGoodsItemModelsResp itemResp = zteRopClient.execute(itemReq, OrderGoodsItemModelsResp.class);
        List<OrderGoodsItemModel> orderItemsList = itemResp.getOrderItems();
        for (int j = 0; j < orderItemsList.size(); j++) {
            OrderGoodsItemModel orderGoodsItem = orderItemsList.get(j);
            item_list.add(orderGoodsItem);
        }
        return item_list;
    }

    //组装查询条件
    public OrderQueryReq builderSelectWhere(SelectOrderRequestDTO request) {
        OrderQueryReq orderQueryReq = new OrderQueryReq();
        OrderQueryParam orderQueryParam = new OrderQueryParam();

        switch (request.getLoginUserType()) {
            case OrderManagerConsts.LOGIN_USER_TYPE_M: //会员查询
                orderQueryParam.setMember_id(request.getMemberId());  //memberID
                if (StringUtils.isEmpty(request.getOrderStatus())) {    //查询全部订单状态
                    orderQueryParam.setInOrderStatus("2,4,5,6,7,-10");//待付款，待发货，待收货，完成，带评价，取消，已删除
                } else {    //指定订单状态
                    orderQueryParam.setOrderstatus(request.getOrderStatus());
                }
                break;
            case OrderManagerConsts.LOGIN_USER_TYPE_O: //运营人员查询
                orderQueryParam.setUserid(request.getUserId());//userID
                if (StringUtils.isEmpty(request.getOrderStatus())) {    //查询全部订单状态
                    orderQueryParam.setInOrderStatus("2,4,5,6,7,-10,-99");  //待付款，待发货，待收货，完成，带评价，取消，已删除
                } else {   //指定订单状态
                    orderQueryParam.setOrderstatus(request.getOrderStatus());
                }
                break;
            default:
                orderQueryParam.setOrderstatus(request.getOrderStatus());
                break;
        }


        orderQueryParam.setEndTime(request.getEndTime());  //结束时间
        orderQueryParam.setStartTime(request.getStartTime()); //起始时间
        orderQueryParam.setOrderId(request.getOrderId()); //订单号

        orderQueryReq.setPage_index(String.valueOf(request.getPageNo())); //分页
        orderQueryReq.setPage_size(String.valueOf(request.getPageSize())); //数量
        orderQueryReq.setOrderQueryParam(orderQueryParam);
        return orderQueryReq;
    }

    //通过订单id查询物流信息
    public List selectDeliveryByOrderId(String order) {
        OrderDeliveryListReq deliveryListReq = new OrderDeliveryListReq();
        deliveryListReq.setType(0);//单据类型 1、发货单据2、退货单据3、换货单据
        deliveryListReq.setOrder_id(order);
        OrderDeliveryListResp  resp= zteRopClient.execute(deliveryListReq, OrderDeliveryListResp.class);
       return resp.getDeliveryList();
    }

}
