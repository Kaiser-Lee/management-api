package com.iwhalecloud.retail.oms.service.impl;

import com.alibaba.dubbo.config.annotation.Service;
import com.iwhalecloud.retail.oms.OmsCommonConsts;
import com.iwhalecloud.retail.oms.dto.CloudShelfDetailDTO;
import com.iwhalecloud.retail.oms.dto.ContentBaseDTO;
import com.iwhalecloud.retail.oms.dto.DefaultOperatingDTO;
import com.iwhalecloud.retail.oms.dto.OperatingPositionBindDTO;
import com.iwhalecloud.retail.oms.dto.ResultVO;
import com.iwhalecloud.retail.oms.dto.resquest.cloud.CloudShelfDetailModifyReq;
import com.iwhalecloud.retail.oms.dto.resquest.cloud.CloudShelfDetailResetReq;
import com.iwhalecloud.retail.oms.dto.resquest.cloud.OperatingPositionBindReq;
import com.iwhalecloud.retail.oms.entity.CloudShelfDetail;
import com.iwhalecloud.retail.oms.exception.BaseException;
import com.iwhalecloud.retail.oms.manager.CloudShelfDetailManager;
import com.iwhalecloud.retail.oms.manager.ContentBaseManager;
import com.iwhalecloud.retail.oms.manager.DefaultContentManager;
import com.iwhalecloud.retail.oms.manager.DefaultOperatingManager;
import com.iwhalecloud.retail.oms.manager.OperatingPositionBindManager;
import com.iwhalecloud.retail.oms.manager.ShelfDetailManager;
import com.iwhalecloud.retail.oms.service.CloudShelfDetailService;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.lang3.math.NumberUtils;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

@Slf4j
@Service
public class CloudShelfDetailServiceImpl implements CloudShelfDetailService {

    @Autowired
    private CloudShelfDetailManager cloudShelfDetailManager;

    @Autowired
    private DefaultOperatingManager defaultOperatingManager;

    @Autowired
    private DefaultContentManager defaultContentManager;

    @Autowired
    private ContentBaseManager contentBaseManager;

    @Autowired
    private OperatingPositionBindManager operationPositionManager;

    @Autowired
    private ShelfDetailManager ShelfDetailManager;

    @Override
    @Transactional
    public List<CloudShelfDetailDTO> resetCloudShelfDetail(CloudShelfDetailResetReq req, String userId) throws Exception {
        List<CloudShelfDetailDTO> cloudShelfDetailDTOS = new ArrayList<>();
        List<CloudShelfDetail> cloudShelfDetails = cloudShelfDetailManager.qryListByIds(req.getCloudShelfDetailIds());
        for (CloudShelfDetail cloudShelfDetail : cloudShelfDetails){
            //重置云货架栏目相关信息
            List<DefaultOperatingDTO> defaultOperations = defaultOperatingManager.qryDefaultOperation(cloudShelfDetail.getShelfCategoryId());
            if (defaultOperations == null && defaultOperations.size() == 0) {
                throw new BaseException("未能找到类目ID【" + cloudShelfDetail.getShelfCategoryId() + "】下相关运营位信息", "-1");
            }
            for (DefaultOperatingDTO defaultOperation : defaultOperations){
                cloudShelfDetail.setOperatingPositionAdscription(defaultOperation.getOperatingPositionAdscription());
                cloudShelfDetail.setOperatingPositionExpiryTime(defaultOperation.getOperatingPositionExpiryTime());
                cloudShelfDetail.setOperatingPositionName(defaultOperation.getOperatingPositionName());
                cloudShelfDetail.setOperatingPositionPlayMode(defaultOperation.getOperatingPositionPlayMode());
                cloudShelfDetail.setOperatingPositionProperty(defaultOperation.getOperatingPositionProperty());
                cloudShelfDetail.setOperatingPositionType(defaultOperation.getOperatingPositionType());
                cloudShelfDetail.setModifier(userId);
                cloudShelfDetail.setGmtModified(new Date());
                cloudShelfDetailManager.update(cloudShelfDetail);
                CloudShelfDetailDTO cloudShelfDetailDTO = new CloudShelfDetailDTO();
                BeanUtils.copyProperties(cloudShelfDetail, cloudShelfDetailDTO);

                //根据默认内容 创建内容信息
//            ContentBaseDTO contentBaseDTO = defaultContentManager.CreateContentBase(defaultOperation.getDefaultContentId(), userId);
                //根据默认内容ID获得默认内容对象
                ContentBaseDTO contentBaseDTO = contentBaseManager.queryContentBaseById(NumberUtils.toLong(defaultOperation.getDefaultContentId()));

                //重置云货架栏目关联内容相关信息
                operationPositionManager.delete(cloudShelfDetail.getOperatingPositionId());
                OperatingPositionBindDTO operatingPositionBindDTO = operationPositionManager.createOperatingPositionBindDTO(cloudShelfDetail.getOperatingPositionId(),defaultOperation.getDefaultContentId(),userId );

                operatingPositionBindDTO.setContentBase(contentBaseDTO);
                cloudShelfDetailDTO.setOperatingPositionBindDTO(operatingPositionBindDTO);
                cloudShelfDetailDTOS.add(cloudShelfDetailDTO);
            }
        }
        return cloudShelfDetailDTOS;
    }

    /**
     * 接口逻辑：
     * 更新云货架详情信息，更新云货架关联内容模型
     * @param cloudShelfDetailModifyReq
     * @return
     */
    @Override
    @Transactional
    public ResultVO modifyCloudShelfDetailByParam(CloudShelfDetailModifyReq cloudShelfDetailModifyReq) {
        ResultVO resultVO = new ResultVO();
        log.info("CloudShelfDetailServiceImpl modifyCloudShelfDetailByParam cloudShelfDetailModifyReq={} ",cloudShelfDetailModifyReq);
        try {
            List<OperatingPositionBindReq>  operatingPositionBindReqs = cloudShelfDetailModifyReq.getOperatingPositionBind();
            if(operatingPositionBindReqs.size()>0){
                if(operatingPositionBindReqs.size()>0){
                    operationPositionManager.batchUpdateOperatingPositionBind(operatingPositionBindReqs);
                }
                resultVO.setResultCode(OmsCommonConsts.RESULE_CODE_SUCCESS);
                resultVO.setResultData("更新成功");
                resultVO.setResultMsg("success");
            }
        }catch (Exception e) {
            log.info("CloudShelfDetailServiceImpl modifyCloudShelfDetailByParam Exception={} ",e);
            resultVO.setResultCode(OmsCommonConsts.RESULE_CODE_FAIL);
            resultVO.setResultData(e.getMessage());
        }
        return resultVO;
    }

}