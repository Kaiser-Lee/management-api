package com.iwhalecloud.retail.oms.web.controller.rop;

import com.alibaba.dubbo.config.annotation.Reference;
import com.iwhalecloud.retail.oms.OmsCommonConsts;
import com.iwhalecloud.retail.oms.dto.ResultVO;
import com.iwhalecloud.retail.oms.dto.response.CommonResultResp;
import com.iwhalecloud.retail.oms.dto.response.OrderQueryListResp;
import com.iwhalecloud.retail.oms.dto.resquest.order.*;
import com.iwhalecloud.retail.oms.service.OrderManagerService;
import com.iwhalecloud.retail.oms.web.annotation.UserLoginToken;
import com.iwhalecloud.retail.oms.web.interceptor.MemberContext;
import com.iwhalecloud.retail.oms.web.utils.ResponseComUtil;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import zte.params.order.resp.OrderApplyPageListResp;

@RestController
//@CrossOrigin
@RequestMapping("/api/rop/orderManager")
public class OrderManagerROPController {

	@Reference
    private OrderManagerService orderManagerService;

    @RequestMapping(value = "/selectOrder",method = RequestMethod.POST)
    @UserLoginToken
    public ResultVO selectOrder(@RequestBody SelectOrderRequestDTO request) {
        request.checkPage();
        request.setMemberId(MemberContext.getMemberId());
//        request.setUserId(UserContext.getUserId());
        ResultVO resultVO = new ResultVO();
        try {
            OrderQueryListResp resp = orderManagerService.selectOrder(request);
            resultVO.setResultCode(resp.getError_code());
            resultVO.setResultMsg(resp.getError_msg());
            resultVO.setResultData(ResponseComUtil.page(request.getPageNo(), resp.getPage()));
        } catch (Exception e) {
            e.printStackTrace();
            resultVO.setResultCode(OmsCommonConsts.RESULE_CODE_FAIL);
            resultVO.setResultMsg(e.getMessage());
        }


        return resultVO;
    }

    @RequestMapping(value = "/builderOrder",method = RequestMethod.POST)
    @UserLoginToken
    public ResultVO builderOrder(@RequestBody BuilderOrderRequestDTO request) {

        ResultVO resultVO = new ResultVO();
        request.setUserSessionId(MemberContext.getUserSessionId());
        request.setMemberId(MemberContext.getMemberId());

        try {
            CommonResultResp resp= orderManagerService.builderOrder(request);
            ResponseComUtil.RespToResultVO(resp,resultVO);
        } catch (Exception e) {
            e.printStackTrace();
            resultVO.setResultCode(OmsCommonConsts.RESULE_CODE_FAIL);
            resultVO.setResultMsg(e.getMessage());
        }

        return resultVO;
    }

    @UserLoginToken
    @RequestMapping(value = "/updateOrderStatus",method = RequestMethod.PUT)
    public ResultVO updateOrderStatus(@RequestBody UpdateOrderStatusRequestDTO request) {
        ResultVO resultVO = new ResultVO();
        request.setMemberId(MemberContext.getMemberId());
        request.setUserSessionId(MemberContext.getUserSessionId());

        try {
            CommonResultResp resp = orderManagerService.updateOrderStatus(request);
            ResponseComUtil.RespToResultVO(resp,resultVO);
        } catch (Exception e) {
            e.printStackTrace();
            resultVO.setResultCode(OmsCommonConsts.RESULE_CODE_FAIL);
            resultVO.setResultMsg(e.getMessage());
        }

        return resultVO;
    }

    @UserLoginToken
    @RequestMapping(value = "/addOrderApply",method = RequestMethod.POST)
    public ResultVO addOrderApply(@RequestBody ApplyOrderRequestDTO request) {
        ResultVO resultVO = new ResultVO();

        request.setMemberId(request.getMemberId());
        request.setUserSessionId(MemberContext.getUserSessionId());

        try {
            CommonResultResp resp = orderManagerService.addOrderApply(request);
            ResponseComUtil.RespToResultVO(resp,resultVO);
        } catch (Exception e) {
            e.printStackTrace();
            resultVO.setResultCode(OmsCommonConsts.RESULE_CODE_FAIL);
            resultVO.setResultMsg(e.getMessage());
        }

        return resultVO;
    }

    @UserLoginToken
    @RequestMapping(value = "/updateTHOrderApply",method = RequestMethod.PUT)
    public ResultVO updateTHOrderApply(@RequestBody UpdateApplyOrderRequestDTO request) {
        ResultVO resultVO = new ResultVO();

        request.setUserSessionId(MemberContext.getUserSessionId());

        try {
            CommonResultResp resp = orderManagerService.updateTHApplyOrder(request);
            ResponseComUtil.RespToResultVO(resp,resultVO);
        } catch (Exception e) {
            e.printStackTrace();
            resultVO.setResultCode(OmsCommonConsts.RESULE_CODE_FAIL);
            resultVO.setResultMsg(e.getMessage());
        }

        return resultVO;
    }

    @UserLoginToken
    @RequestMapping(value = "/updateHHOrderApply",method = RequestMethod.PUT)
    public ResultVO updateHHOrderApply(@RequestBody UpdateApplyOrderRequestDTO request) {
        ResultVO resultVO = new ResultVO();

        request.setUserSessionId(MemberContext.getUserSessionId());

        try {
            CommonResultResp resp = orderManagerService.updateHHApplyOrder(request);
            ResponseComUtil.RespToResultVO(resp,resultVO);
        } catch (Exception e) {
            e.printStackTrace();
            resultVO.setResultCode(OmsCommonConsts.RESULE_CODE_FAIL);
            resultVO.setResultMsg(e.getMessage());
        }

        return resultVO;
    }


    @UserLoginToken
    @RequestMapping(value = "/selectOrderApply",method = RequestMethod.POST)
    public ResultVO selectOrderApply(@RequestBody SelectApplyOrderRequestDTO request) {
        request.checkPage();
        ResultVO resultVO = new ResultVO();

        request.setMemberId(MemberContext.getMemberId());

        try {
            OrderApplyPageListResp resp = orderManagerService.selectApplyOrder(request);
            resultVO.setResultCode(resp.getError_code());
            resultVO.setResultMsg(resp.getError_msg());
            resultVO.setResultData(ResponseComUtil.page(request.getPageNo(), resp.getPage()));
        } catch (Exception e) {
            e.printStackTrace();
            resultVO.setResultCode(OmsCommonConsts.RESULE_CODE_FAIL);
            resultVO.setResultMsg(e.getMessage());
        }

        return resultVO;
    }

}
