package com.iwhalecloud.retail.oms.web.controller.cloud;

import com.alibaba.dubbo.config.annotation.Reference;
import com.alibaba.fastjson.JSON;
import com.iwhalecloud.retail.oms.OmsCommonConsts;
import com.iwhalecloud.retail.oms.dto.CloudShelfDetailDTO;
import com.iwhalecloud.retail.oms.dto.ResultVO;
import com.iwhalecloud.retail.oms.dto.resquest.cloud.CloudShelfDetailResetReq;
import com.iwhalecloud.retail.oms.service.CloudShelfDetailService;
import com.iwhalecloud.retail.oms.web.interceptor.UserContext;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@Slf4j
@RestController
@CrossOrigin
@RequestMapping("/api/cloudShelfDetailController")
public class CloudShelfDetailController {
	
    @Reference
    private CloudShelfDetailService cloudShelfDetailService;


    /**
     * 重置云货架栏目接口.
     *
     * @param req
     * @return
     * @author Ji.kai
     * @date 2018/11/1 15:27
     */
    @ApiOperation(value = "重置云货架栏目接口", notes = "重置云货架栏目接口")
    @ApiResponses({
            @ApiResponse(code=400,message="请求参数没填好"),
            @ApiResponse(code=404,message="请求路径没有或页面跳转路径不对")
    })
    @RequestMapping(value = "/reset", method = RequestMethod.POST)
    public ResultVO<List<CloudShelfDetailDTO>> resetCloudShelfDetail(@RequestBody @ApiParam( value = "重置云货架栏目请求参数", required = true )CloudShelfDetailResetReq req) {
        ResultVO<List<CloudShelfDetailDTO>> resultVO = new ResultVO<>();
        log.info("page:{}", JSON.toJSONString(req));
        try {
            List<CloudShelfDetailDTO> res = cloudShelfDetailService.resetCloudShelfDetail(req, UserContext.getUserId());
            resultVO.setResultCode(OmsCommonConsts.RESULE_CODE_SUCCESS);
            resultVO.setResultData(res);
            resultVO.setResultMsg("成功");
        } catch (Exception e) {
            e.printStackTrace();
            resultVO.setResultCode(OmsCommonConsts.RESULE_CODE_FAIL);
            resultVO.setResultMsg(e.getMessage());
        }
        return resultVO;
    }
    
}