package com.iwhalecloud.retail.oms.service.impl;

import com.alibaba.dubbo.config.annotation.Service;
import com.iwhalecloud.retail.oms.common.ResultCodeEnum;
import com.iwhalecloud.retail.oms.dto.ResultVO;
import com.iwhalecloud.retail.oms.dto.resquest.TGoodsEvaluateTotalDTO;
import com.iwhalecloud.retail.oms.handler.OrderMangerHandler;
import com.iwhalecloud.retail.oms.rop.ZteRopClient;
import com.iwhalecloud.retail.oms.service.CommentsService;
import com.iwhalecloud.retail.oms.service.GoodsEvaluateTotalService;
import com.ztesoft.net.app.base.core.model.Member;
import com.ztesoft.net.framework.database.Page;
import com.ztesoft.net.mall.core.model.Comments;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import params.member.req.CommentAddReq;
import zte.params.member.req.CommentPageListReq;
import zte.params.member.resp.CommentAddResp;
import zte.params.member.resp.CommentPageListResp;

/**
 * @Author pjq
 * @Date 2018/10/10
 **/
@Slf4j
@Service
public class CommentsServiceImpl implements CommentsService {

    @Autowired
    private ZteRopClient client;
    @Autowired
    GoodsEvaluateTotalService goodsEvaluateTotalService;

    @Autowired
    private OrderMangerHandler orderMangerHandler;

    @Override
    public ResultVO<Boolean> addComments(CommentAddReq req) {
        log.info("CommentsServiceImpl addComments req={} ",req);
        Member member = orderMangerHandler.selectMember(req.getMember_id());
        if(null == member){
            log.info("CommentsController addComments member={} ",member);
            ResultVO.error("member is null");
        }
        Comments comments = req.getComment();
        if(null == comments){
            return ResultVO.error();
        }
        comments.setAuthor_id(req.getMember_id());
        comments.setAuthor(member.getUname());
        comments.setContact(member.getMobile());
        String orderId = comments.getOrder_id();
        CommentAddResp resp = null;
        try {
            resp = client.execute(req,CommentAddResp.class);
            if(null == resp){
                return ResultVO.error("resp is null");
            }
            if(ResultCodeEnum.ERROR.getCode().equals(resp.getError_code())){
                return ResultVO.error(resp.getError_msg());
            }
            TGoodsEvaluateTotalDTO totalDTO = new TGoodsEvaluateTotalDTO();
            if(null != req.getComment()){
                totalDTO.setGoodsId(req.getComment().getObject_id());
                totalDTO.setEvaluateText(req.getComment().getCommt());
                goodsEvaluateTotalService.modifyGoodsEvaluate(totalDTO);
            }
            orderMangerHandler.updateStatus(orderId,OrderMangerHandler.ORDER_STATUS_6);

        }catch (Exception e){
            log.error("CommentsServiceImpl addComments Exception={} ",e);
            ResultVO.error();

        }
        return ResultVO.success(true);
    }

    @Override
    public ResultVO<Page> queryCommoentForPage(CommentPageListReq req) {
        log.info("CommentsServiceImpl addComments req={} ",req);
        CommentPageListResp resp = null;
        try {
            resp = client.execute(req,CommentPageListResp.class);
            if(null == resp){
                return ResultVO.error("resp is null");
            }
            if(ResultCodeEnum.ERROR.getCode().equals(resp.getError_code())){
                return ResultVO.error(resp.getError_msg());
            }
        }catch (Exception e){
            log.error("CommentsServiceImpl queryCommoentForPage Exception={} ",e);
            return ResultVO.error();
        }
        if(null == resp){
            return ResultVO.error();
        }
        return ResultVO.success(resp.getPage());
    }
}
